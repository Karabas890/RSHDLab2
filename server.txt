PGDATA=$HOME/ykk83
pg_ctl -D "$PGDATA" stop
pg_ctl -D "$PGDATA" stop -m fast
pg_ctl -D "$PGDATA" restart -l "$PGDATA/logfile"
pg_ctl reload -D "$PGDATA"


psql -p 9426 -U postgres2 -d postgres
ALTER USER postgres2 WITH PASSWORD 'CqvGNIsy';
psql -h 127.0.0.1 -p 9426 -U postgres2 -d postgres
psql -h pg121 -p 9426 -U postgres2 -d postgres
#Создаем временные таблицы
CREATE TEMP TABLE temp_test (id INT);


CREATE TABLE pg_temp.my_temp_table (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    value INTEGER
);

CREATE TEMP TABLE test_temp_table (
    id SERIAL PRIMARY KEY,
    name TEXT
);

temp_tablespaces = 'cwv52'


DROP TABLE IF EXISTS test_table1;

#удаляем все каталоги
rm -rf ~/qfg95 ~/twv39 ~/ykk83

#просмотр всех ролей
SELECT * FROM pg_roles;

psql -h 192.168.1.100 -p 9426 -U postgres2 -d postgres


SELECT
    CASE WHEN ROW_NUMBER() OVER (PARTITION BY COALESCE(t.spcname, 'pg_default') = 1
         THEN COALESCE(t.spcname, 'pg_default')
         ELSE ''
    END AS tablespace,
    COALESCE(t.spcowner::regrole::text, 'postgres') AS owner,
    pg_tablespace_location(t.oid) AS location,
    CASE c.relkind
        WHEN 'r' THEN 'table'
        WHEN 'i' THEN 'index'
        WHEN 'S' THEN 'sequence'
        WHEN 'v' THEN 'view'
        WHEN 'm' THEN 'materialized view'
        WHEN 'c' THEN 'composite type'
        WHEN 't' THEN 'TOAST table'
        ELSE c.relkind::text
    END AS object_type,
    n.nspname AS schema_name,
    c.relname AS object_name,
    pg_size_pretty(pg_total_relation_size(c.oid)) AS total_size,
    CASE
        WHEN c.relkind IN ('r','m') THEN (SELECT count(*) FROM pg_index i WHERE i.indrelid = c.oid)
        ELSE NULL
    END AS indexes_count
FROM
    pg_tablespace t
FULL JOIN
    pg_class c ON c.reltablespace = t.oid
LEFT JOIN
    pg_namespace n ON c.relnamespace = n.oid
WHERE
    c.relname IS NOT NULL  -- Исключаем строки без объектов
    AND n.nspname NOT LIKE 'pg_%'  -- Исключаем системные схемы
    AND n.nspname != 'information_schema'
ORDER BY
    COALESCE(t.spcname, 'pg_default'),
    n.nspname,
    c.relname;







